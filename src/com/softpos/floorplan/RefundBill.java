package com.softpos.floorplan;

import com.softpos.crm.pos.core.controller.MPluController;
import com.softpos.crm.pos.core.controller.MTranController;
import com.softpos.main.program.GetUserAction;
import com.softpos.pos.core.controller.BillControl;
import com.softpos.crm.pos.core.modal.CreditPaymentRec;
import com.softpos.pos.core.model.POSHWSetup;
import com.softpos.pos.core.controller.PPrint;
import com.softpos.pos.core.controller.PUtility;
import com.softpos.crm.pos.core.modal.PublicVar;
import com.softpos.pos.core.controller.ThaiUtil;
import com.softpos.pos.core.controller.Value;
import com.softpos.pos.core.model.BillNoBean;
import com.softpos.pos.core.controller.MemmaterController;
import com.softpos.pos.core.controller.PosControl;
import com.softpos.pos.core.controller.RefundBillController;
import com.softpos.pos.core.model.PosUserBean;
import com.softpos.pos.core.model.TranRecord;
import convert_utility.text_to_image.TextToImage;
import database.MySQLConnect;
import java.awt.Color;
import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.Format;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import soft.virtual.KeyBoardDialog;
import util.AppLogUtil;
import util.MSG;

public class RefundBill extends javax.swing.JDialog {

    private Date date = new Date();
    private TranRecord[] MyArray;
    private int ArraySize;
    private PPrint prn = new PPrint();
    private String BillNo = "";
    private DecimalFormat DecFmt = new DecimalFormat("##,###,##0.00");
    private SimpleDateFormat Datefmt = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
    private SimpleDateFormat Timefmt = new SimpleDateFormat("HH:mm:ss");
    private DefaultTableModel model;
    private String macno = "";
    private String memcode = "";

    private BillControl billControl = new BillControl();

    /**
     * Creates new form RefundBill
     */
    public RefundBill(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setBounds(GraphicsEnvironment.getLocalGraphicsEnvironment().getMaximumWindowBounds());
        PublicVar.SmpCouponArray = null;
        model = (DefaultTableModel) tblshowplu.getModel();


        /*
         * Column List off Model
         * 1 {Void,Type,Print(Kic),PluCode,Description,Qty,Price,Amount,promotion,Subdisc,
         *   cudisc,time,emp,macno,user 
         */
        tblshowplu.setShowGrid(true);
        tblshowplu.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblshowplu.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblshowplu.setRowSelectionAllowed(true);
        tblshowplu.setGridColor(Color.gray);

        JTableHeader header = tblshowplu.getTableHeader();
        //header.setBackground(Color.yellow);
        header.setFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 14));
        //txtTable.setBorder(javax.swing.border.LineBorder.createBlackLineBorder());

        /* Set Column Size      */
        int[] ColSize = {150, 150, 150, 330, 120, 120, 170};
        for (int i = 0; i < 7; i++) {
            //int vColIndex = 0;
            TableColumn col = tblshowplu.getColumnModel().getColumn(i);
            col.setPreferredWidth(ColSize[i]);
        }
        DecimalFormat DoubleFmt = new DecimalFormat("##,###,##0.00");
        DecimalFormat IntegerFmt = new DecimalFormat("##,###,##0");
        DecimalFormat PersentFmt = new DecimalFormat("#,##0.00%");

        TableColumnModel tcm = tblshowplu.getColumnModel();
        TableTestFormatRenderer r = new TableTestFormatRenderer(IntegerFmt);
        r.setHorizontalAlignment(SwingConstants.RIGHT);
        tcm.getColumn(4).setCellRenderer(r);

        r = new TableTestFormatRenderer(DoubleFmt);
        r.setHorizontalAlignment(SwingConstants.RIGHT);
        tcm.getColumn(5).setCellRenderer(r);

        r = new TableTestFormatRenderer(DoubleFmt);
        r.setHorizontalAlignment(SwingConstants.RIGHT);
        tcm.getColumn(6).setCellRenderer(r);

        initRefund();
        //txtPurseMsg.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtBillNo = new javax.swing.JTextField();
        txtMacNo = new javax.swing.JTextField();
        bntOK = new javax.swing.JButton();
        bntNew = new javax.swing.JButton();
        bntExit = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblshowplu = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtTableNo = new javax.swing.JTextField();
        txtNetTotal = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("รายการยกเลิกบิลการขาย");
        setFocusable(false);
        setUndecorated(true);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("เลขที่ใบเสร็จรับเงิน");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Mac No/Cashier");

        txtBillNo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtBillNo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtBillNoMouseClicked(evt);
            }
        });
        txtBillNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBillNoKeyPressed(evt);
            }
        });

        txtMacNo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtMacNo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtMacNo.setFocusable(false);

        bntOK.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bntOK.setText("F5-ตกลง (OK)");
        bntOK.setFocusable(false);
        bntOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntOKActionPerformed(evt);
            }
        });

        bntNew.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bntNew.setText("F4-เลขที่ใหม่ (New)");
        bntNew.setFocusable(false);
        bntNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntNewActionPerformed(evt);
            }
        });

        bntExit.setBackground(new java.awt.Color(255, 153, 153));
        bntExit.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bntExit.setText("ESC-ออก (Exit)");
        bntExit.setFocusable(false);
        bntExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntExitActionPerformed(evt);
            }
        });

        tblshowplu.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblshowplu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "V", "ETD", "PLU Code", "Description", "Qty", "Price", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblshowplu.setFocusable(false);
        tblshowplu.setOpaque(false);
        tblshowplu.setRowHeight(25);
        jScrollPane2.setViewportView(tblshowplu);

        jPanel1.setBackground(new java.awt.Color(255, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setFocusable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("หมายเลขโต๊ะ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ยอดขายสุทธิ (Net Total Amount)");

        txtTableNo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtTableNo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTableNo.setFocusable(false);
        txtTableNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTableNoActionPerformed(evt);
            }
        });
        txtTableNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTableNoKeyPressed(evt);
            }
        });

        txtNetTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtNetTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtNetTotal.setFocusable(false);
        txtNetTotal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtNetTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNetTotalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTableNo, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNetTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNetTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtTableNo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jScrollPane2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtBillNo, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)
                                .addComponent(jLabel6)
                                .addGap(27, 27, 27)
                                .addComponent(txtMacNo, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 302, Short.MAX_VALUE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(bntOK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bntExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bntNew, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(9, 9, 9)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6)
                            .addComponent(txtMacNo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBillNo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(bntOK, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bntNew, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bntExit, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 205, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1040, 457));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

private void txtTableNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTableNoActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_txtTableNoActionPerformed

private void txtNetTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNetTotalActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_txtNetTotalActionPerformed

private void bntNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntNewActionPerformed
    initRefund();
}//GEN-LAST:event_bntNewActionPerformed

private void txtTableNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTableNoKeyPressed
}//GEN-LAST:event_txtTableNoKeyPressed

private void txtBillNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBillNoKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        loadDataFromBillNo();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntExitClick();
    }
    if (evt.getKeyCode() == KeyEvent.VK_F5) {
        bntOKClick();
    }
    if (evt.getKeyCode() == KeyEvent.VK_F4) {
        initRefund();
    }


}//GEN-LAST:event_txtBillNoKeyPressed

    private void bntOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntOKActionPerformed
        bntOKClick();
    }//GEN-LAST:event_bntOKActionPerformed

    private void bntExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntExitActionPerformed
        bntExitClick();
    }//GEN-LAST:event_bntExitActionPerformed

    private void txtBillNoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBillNoMouseClicked
        if (evt.getClickCount() == 2) {
            KeyBoardDialog.get(txtBillNo);
        }
    }//GEN-LAST:event_txtBillNoMouseClicked

    private void bntOKClick() {
        if (loadDataFromBillNo() && checkPermit()) {
            if (PUtility.ShowConfirmMsg("ยืนยันการยกเลิกใบเสร็จรับเงินเลขที่ " + BillNo + " Yes/No ?")) {
                updateDatabaseForRefund();
                try {
                    Thread.sleep(100);
                } catch (InterruptedException ex) {
                    Logger.getLogger(RefundBill.class.getName()).log(Level.SEVERE, null, ex);
                }
                POSHWSetup bean = POSHWSetup.Bean(Value.MACNO);
                prn.Print_Head_EJ();
                prn.PrintBillRefund(BillNo);
                String TempBill = bean.getEJDailyPath() + "/tempbill.txt";
                String ImageFile = bean.getEJDailyPath() + "/" + PublicVar.Branch_Code + "_" + Value.MACNO + "_RFN" + BillNo + ".gif";
                TextToImage toImage = new TextToImage();
                if (!toImage.textToImage(TempBill, ImageFile)) {
                    //MSG.ERR(this, "EJ File Write Error.......");
                }
                File fObject2 = new File(TempBill);
                fObject2.delete();

                // check member point and remove both table mycrmbranch.mplu and mycrmbranch.mtran
                BillControl billControl = new BillControl();
                BillNoBean billBean = billControl.getData(BillNo);

                String receiptNo = billBean.getB_MacNo() + "/" + billBean.getB_Refno();
                MPluController mpluControl = new MPluController();
                mpluControl.refundBill(receiptNo);
                MTranController mtranControl = new MTranController();
                mtranControl.refundBill(receiptNo);

                MemmaterController memControl = new MemmaterController();
                memControl.updateScoreRefund(billBean.getB_MemCode(), billBean.getB_MemCurSum());

                MSG.NOTICE("การยกเลิกใบเสร็จรับเงินเลขที่ " + BillNo + " เรียบร้อยแล้ว...");
            }
            initRefund();
        }
    }

    private void updateDatabaseForRefund() {
        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open(this.getClass());

        String sql;
        try {
            sql = "update billno "
                    + "set b_voiduser='" + PublicVar.TUserRec.getUserName() + "',"
                    + "b_voidtime='" + Timefmt.format(date) + "',"
                    + "b_void='V' "
                    + "where b_macno='" + macno + "' "
                    + "and b_refno='" + BillNo + "'";
            try (Statement stmt = mysql.getConnection().createStatement()) {
                stmt.executeUpdate(sql);
            }

            sql = "update t_sale set r_refund='V' "
                    + "where (macno='" + macno + "') "
                    + "and (r_refno='" + BillNo + "')";
            try (Statement stmt = mysql.getConnection().createStatement()) {
                stmt.executeUpdate(sql);
            }

            sql = "update t_saleset set r_refund='V' "
                    + "where (macno='" + macno + "') "
                    + "and (r_refno='" + BillNo + "')";
            try (Statement stmt = mysql.getConnection().createStatement()) {
                stmt.executeUpdate(sql);
            }

            sql = "update t_cupon set refund='V' "
                    + "where (terminal='" + macno + "') "
                    + "and (r_refno='" + BillNo + "')";
            try (Statement stmt = mysql.getConnection().createStatement()) {
                stmt.executeUpdate(sql);
            }

            sql = "delete from t_promotion "
                    + "where (terminal='" + macno + "') "
                    + "and (r_refno='" + BillNo + "')";
            try (Statement stmt = mysql.getConnection().createStatement()) {
                stmt.executeUpdate(sql);
            }

            sql = "update t_gift set fat='V'  where (macno='" + macno + "') and (refno='" + BillNo + "')";
            try (Statement stmt = mysql.getConnection().createStatement()) {
                stmt.executeUpdate(sql);
            }

            sql = "delete from accr where (arno='" + PublicVar.Branch_Code + "/" + macno + "/" + BillNo + "')";
            try (Statement stmt = mysql.getConnection().createStatement()) {
                stmt.executeUpdate(sql);
            }

            if (!memcode.equals("")) {
                try (Statement stmt = mysql.getConnection().createStatement()) {
                    BillNoBean bBean = billControl.getData(BillNo);

                    String SqlQuery = "update " + Value.db_member + ".memmaster set "
                            + "m_sum=m_sum-" + bBean.getB_NetTotal() + " "
                            + "where (m_code='" + memcode + "')";
                    stmt.executeUpdate(SqlQuery);
                }

                sql = "delete from mtran where m_billno='" + macno + "/" + BillNo + "'";
                try (Statement stmt = mysql.getConnection().createStatement()) {
                    stmt.executeUpdate(sql);
                }

                sql = "delete from mtranplu where m_billno='" + macno + "/" + BillNo + "'";
                try (Statement stmt = mysql.getConnection().createStatement()) {
                    stmt.executeUpdate(sql);
                }
            }

            // Return Stock
            sql = "select * from t_sale where (macno='" + macno + "') and (r_refno='" + BillNo + "') and (r_void<>'V')";
            try (Statement stmt = mysql.getConnection().createStatement(); ResultSet rs = stmt.executeQuery(sql)) {
                while (rs.next()) {
                    String StkCode = PUtility.GetStkCode();
                    String StkRemark = "SAL";
                    String DocNo = "R" + rs.getString("r_refno");
                    Date TDate = rs.getDate("r_date");
                    PUtility.ProcessStockOut(DocNo, StkCode, rs.getString("r_plucode"), TDate, StkRemark, -1 * rs.getDouble("r_quan"), -1 * rs.getDouble("r_total"), PublicVar.TUserRec.getUserName(), rs.getString("r_stock"), rs.getString("r_set"), rs.getString("r_index"), "2");
                }
            }
        } catch (SQLException e) {
            MSG.ERR(e.getMessage());
            AppLogUtil.log(RefundBill.class, "error", e);
        } finally {
            mysql.close();
        }
    }

    private void Cleartblshowplu() {
        int RowCount = model.getRowCount();
        for (int i = 0; i <= RowCount - 1; i++) {
            model.removeRow(0);
        }
    }

    private void bntExitClick() {
        this.dispose();
    }

    private Boolean loadDataFromBillNo() {
        Boolean RetValue = false;
        BillNo = txtBillNo.getText();
        //Load Data From BillNo

        RefundBillController refundControl = new RefundBillController();
        BillNoBean billNoBean = refundControl.checkBillByRefno(Value.MACNO, BillNo);
        if (billNoBean == null) {
            MSG.WAR("ไม่พบเลขที่ใบเสร็จรับเงินที่ต้องการยกเลิก (Refund) กรุณาตรวจสอบเลขที่ใบเสร็จใหม่...");
            initRefund();
            return RetValue;
        }

        if (billNoBean.getB_Void().equals("V")) {
            MSG.WAR("ใบเสร็จรับเงินเลขที่ " + BillNo + " มีการทำรายการยกเลิก (Refund) ไปแล้ว...");
            initRefund();
            return RetValue;
        }
        if (billNoBean.getB_InvNo() != null && !billNoBean.getB_InvNo().equals("")) {
            MSG.WAR("ใบเสร็จรับเงินนี้มีการพิมพ์ใบกำกับภาษีเต็มรูปเลขที่ " + billNoBean.getB_InvNo() + " กรุณายกเลิกใบกำกับภาษีเต็มรูปก่อนทำรายการ Refund ");
            initRefund();
            return RetValue;
        }

        RetValue = true;
        BillNoBean bBean = billControl.getData(BillNo);
        txtTableNo.setText(bBean.getB_Table());
        txtNetTotal.setValue(bBean.getB_NetTotal());
        txtMacNo.setText(bBean.getB_MacNo() + "/" + bBean.getB_Cashier());
        macno = billNoBean.getB_MacNo();
        memcode = billNoBean.getB_MemCode();
        loadDataFromT_Sale();

        txtBillNo.setFocusable(false);
        txtMacNo.setFocusable(false);
        bntOK.requestFocus();

        return RetValue;
    }

    private void loadDataFromT_Sale() {
        BillNo = txtBillNo.getText();

        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open(this.getClass());
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String LoadBalance = "select * from t_sale "
                    + "where (macno='" + Value.MACNO + "') and (r_refno='" + BillNo + "')";
            ResultSet rs = stmt.executeQuery(LoadBalance);
            Date dt = new Date();
            PublicVar.P_ItemCount = 0;
            MyArray = null;
            MyArray = new TranRecord[1];
            Cleartblshowplu();

            while (rs.next()) {
                PublicVar.P_ItemCount++;
                TranRecord TranRec = new TranRecord();
                TranRec.R_Index = rs.getString("r_index");
                TranRec.R_Date = rs.getDate("r_date");
                TranRec.R_Table = rs.getString("r_table");
                TranRec.R_Time = rs.getString("r_time");
                TranRec.Macno = rs.getString("macno");
                TranRec.Cashier = rs.getString("cashier");
                TranRec.R_Emp = rs.getString("r_emp");
                TranRec.R_Set = rs.getString("r_set");
                TranRec.R_Stock = rs.getString("r_stock");
                TranRec.R_PluCode = rs.getString("r_plucode");
                TranRec.R_PName = ThaiUtil.ASCII2Unicode(rs.getString("r_pname"));
                TranRec.R_Unit = rs.getString("r_unit");
                TranRec.R_Group = rs.getString("r_group");
                TranRec.R_Status = rs.getString("r_status");
                TranRec.R_Normal = rs.getString("r_normal");
                TranRec.R_Discount = rs.getString("r_discount");
                TranRec.R_Service = rs.getString("r_service");
                TranRec.R_Vat = rs.getString("r_vat");
                TranRec.R_Type = rs.getString("r_type");
                TranRec.R_ETD = rs.getString("r_etd");
                TranRec.R_Quan = rs.getDouble("r_quan");
                TranRec.R_Price = rs.getDouble("r_price");
                TranRec.R_Total = rs.getDouble("r_total");
                TranRec.R_PrType = rs.getString("r_prtype");
                TranRec.R_PrCode = rs.getString("r_prcode");
                TranRec.R_PrDisc = rs.getDouble("r_prdisc");
                TranRec.R_PrBath = rs.getDouble("r_prbath");
                TranRec.R_PrAmt = rs.getDouble("r_pramt");
                TranRec.R_PrQuan = rs.getDouble("r_prquan");
                TranRec.R_Redule = rs.getDouble("r_redule");
                TranRec.R_KIC = rs.getString("r_kic");
                TranRec.R_KicPrint = rs.getString("r_kicprint");
                TranRec.R_Void = rs.getString("r_void");
                TranRec.R_VoidTime = rs.getString("r_voidtime");
                TranRec.R_DiscBath = rs.getDouble("r_discbath");
                if (PublicVar.P_ItemCount > 1) {
                    MyArray = PUtility.addArray(MyArray);
                }
                ArraySize = MyArray.length;
                MyArray[ArraySize - 1] = TranRec;
                Object[] input = {rs.getString("r_void"),
                    rs.getString("r_etd"),
                    rs.getString("r_plucode"),
                    ThaiUtil.ASCII2Unicode(rs.getString("r_pname")),
                    rs.getDouble("r_quan"),
                    rs.getDouble("r_price"),
                    rs.getDouble("r_total")
                };
                model.addRow(input);

                int RowCount = model.getRowCount();
                showCell(RowCount - 1, 0);
            }

            rs.close();
            stmt.close();
        } catch (SQLException e) {
            MSG.ERR(e.getMessage());
            AppLogUtil.log(RefundBill.class, "error", e);
        } finally {
            mysql.close();
        }
    }

    private void showCell(int row, int column) {
        if (row > 0) {
            Rectangle rect = tblshowplu.getCellRect(row, column, true);
            tblshowplu.scrollRectToVisible(rect);
            tblshowplu.clearSelection();
            tblshowplu.setRowSelectionInterval(row, row);
            //tblshowplu.getModel().fireTableDataChanged(); // notify the model
        }
    }

    private void initRefund() {
        txtTableNo.setText("");
        txtBillNo.setText("");
        txtNetTotal.setValue(0);
        txtMacNo.setText("");
        txtBillNo.setFocusable(true);
        txtBillNo.requestFocus();
        
        Cleartblshowplu();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntExit;
    private javax.swing.JButton bntNew;
    private javax.swing.JButton bntOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblshowplu;
    private javax.swing.JTextField txtBillNo;
    private javax.swing.JTextField txtMacNo;
    private javax.swing.JFormattedTextField txtNetTotal;
    private javax.swing.JTextField txtTableNo;
    // End of variables declaration//GEN-END:variables

    private boolean checkPermit() {
        MySQLConnect mysql = new MySQLConnect();
        mysql.open(this.getClass());
        boolean isPermit = false;
        try {
            String sql = "select Username, Sale3 from posuser "
                    + "where username='" + Value.USERCODE + "' and Sale2='Y' limit 1";
            try (Statement stmt = mysql.getConnection().createStatement(); ResultSet rs = stmt.executeQuery(sql)) {
                if (rs.next()) {
                    isPermit = true;
                }
            }
        } catch (SQLException e) {
            MSG.ERR(e.getMessage());
            AppLogUtil.log(RefundBill.class, "error", e);
        } finally {
            mysql.close();
        }

        if (isPermit) {
            return true;
        }
        GetUserAction getuser = new GetUserAction(null, true);
        getuser.setVisible(true);

        if (!PublicVar.ReturnString.equals("")) {
            PosUserBean posUser = PosControl.getPosUser(Value.USERCODE);
            if (posUser.getUserName() != null) {
                if (posUser.getSale2().equals("Y")) {
                    return true;
                }
                MSG.ERR(this, "รหัสพนักงานนี้ไม่สามารถเข้าใช้งาน...รายการนี้ได้...!!!");
            } else {
                MSG.ERR(this, "ไม่สามารถ Load สิทธิ์การใช้งานของผู้ใช้งานคนนี้ได้ ...");
            }
        }

        return false;
    }

    private class TableTestFormatRenderer extends DefaultTableCellRenderer {

        private Format formatter;

        public TableTestFormatRenderer(Format formatter) {
            if (formatter == null) {
                throw new NullPointerException();
            }
            this.formatter = formatter;
        }

        @Override
        protected void setValue(Object obj) {
            setText(obj == null ? "" : formatter.format(obj));
        }
    }
}
